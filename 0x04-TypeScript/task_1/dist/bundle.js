!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"printTeacher",(function(){return o})),n.d(t,"StudentClass",(function(){return r}));var o=function(e,t){return e.charAt(0)+". "+t},r=function(){function e(e,t){this.firstName=e,this.lastName=t}return e.prototype.workOnHomework=function(){return"Currently working"},e.prototype.displayName=function(){return this.firstName},e}(),i={firstName:"Betty",lastName:"Kotoka",fullTimeEmployee:!1,location:"Kumasi"},l={firstName:"Gyamfi",lastName:"Johnson",fullTimeEmployee:!0,location:"Sunyani",numberOfReports:5,contract:!0},a=[{firstName:"Kwesi",lastName:"Oyerifi",fullTimeEmployee:!0,location:"Accra",contract:!0},i,l,{firstName:"Bobby",lastName:"Brown",fullTimeEmployee:!1,location:"Tema",numberOfReports:3}],u=document.getElementById("teacher-info");u&&a.forEach((function(e){var t=document.createElement("div");t.textContent=e.firstName+" "+e.lastName+" ("+e.location+") - Full Time: "+e.fullTimeEmployee,"numberOfReports"in e&&(t.textContent+=" - Reports: "+e.numberOfReports),u.appendChild(t)}));var f=new r("Sandy","Amofa");console.log(f.displayName()),console.log(f.workOnHomework()),console.log(l),console.log(i),console.log(o("Alex","Amofa"))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,